apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-v1
  name: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
      - name: users
        image: users
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
---
kind: Service
apiVersion: v1
metadata:
  namespace: demo-v1
  name: users
spec:
  selector:
    app: users
  ports:
    - name: http
      port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-v1
  name: messages
spec:
  selector:
    matchLabels:
      app: messages
  replicas: 1
  template:
    metadata:
      labels:
        app: messages
    spec:
      containers:
      - name: messages
        image: messages
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
---
kind: Service
apiVersion: v1
metadata:
  namespace: demo-v1
  name: messages
spec:
  selector:
    app: messages
  ports:
    - name: http
      port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-v1
  name: oidc
spec:
  selector:
    matchLabels:
      app: oidc
  replicas: 1
  template:
    metadata:
      labels:
        app: oidc
    spec:
      containers:
      - name: oidc
        image: soluto/oidc-server-mock
        imagePullPolicy: IfNotPresent
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: CLIENT_ID
          value: mock
        - name: REDIRECT_URIS
          value: http://client.localtest.me
        - name: TEST_USER
          value: '{"SubjectId":"1","Username":"User1","Password":"pwd"}'
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  namespace: demo-v1
  name: oidc
spec:
  selector:
    app: oidc
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-v1
  name: client
spec:
  selector:
    matchLabels:
      app: client
  replicas: 1
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - name: client
        image: client
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  namespace: demo-v1
  name: client
spec:
  selector:
    app: client
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: client
  namespace: demo-v1
spec:
  hosts:
  - client.localtest.me
  gateways:
  - gateway.default.svc.cluster.local
  http:
  - appendHeaders:
     x-envoy-max-retries: "10"
     x-envoy-retry-on: connect-failure
     x-envoy-upstream-rq-timeout-ms: "0"
    route:
    - destination:
        host: client.demo-v1.svc.cluster.local
        port:
          number: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: oidc
  namespace: demo-v1
spec:
  hosts:
  - oidc.localtest.me
  - oidc.demo-v1
  gateways:
  - gateway.default.svc.cluster.local
  http:
  - appendHeaders:
     x-envoy-max-retries: "10"
     x-envoy-retry-on: connect-failure
     x-envoy-upstream-rq-timeout-ms: "0"
    route:
      - destination:
          host: oidc.demo-v1.svc.cluster.local
          port:
            number: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: messages
  namespace: demo-v1
spec:
  hosts:
  - messages.localtest.me
  gateways:
  - gateway.default.svc.cluster.local
  http:
  - appendHeaders:
     x-envoy-max-retries: "10"
     x-envoy-retry-on: connect-failure
     x-envoy-upstream-rq-timeout-ms: "0"
    route:
      - destination:
          host: messages.demo-v1.svc.cluster.local
          port:
            number: 80